buildscript {
  repositories {
    maven { url = 'https://maven.minecraftforge.net' }
    maven { url = 'https://maven.parchmentmc.org' }
    mavenCentral()
  }
  dependencies {
    classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    classpath "org.parchmentmc:librarian:1.+"
  }
}

apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.parchmentmc.librarian.forgegradle'
apply plugin: 'eclipse'

jarJar.enable()

group = "com.lovetropics"
archivesBaseName = "ltperms"

ext.buildnumber = 0

if (System.getenv('GITHUB_RUN_NUMBER')) {
    project.buildnumber = System.getenv('GITHUB_RUN_NUMBER')
    version = "${mod_version}+${buildnumber}-gha"
} else {
    version = "${mod_version}"
}

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
  mappings channel: 'parchment', version: "${parchment_version}-${minecraft_version}"
  runs {
    client {
      workingDirectory project.file('run')
      property 'forge.logging.console.level', 'info'
      jvmArg '-Dmixin.env.disableRefMap=true'
      mods {
        ltperms {
          sources sourceSets.main
        }
      }
    }
    server {
      workingDirectory project.file('run')
      property 'forge.logging.console.level', 'info'
      jvmArg '-Dmixin.env.disableRefMap=true'
      mods {
        ltperms {
          sources sourceSets.main
        }
      }
    }
  }
}


configurations {
  library
  implementation.extendsFrom library
}

repositories {
  maven { url "https://maven.tterrag.com/" }
  maven { url "https://maven.enginehub.org/repo/" }

  flatDir { dirs 'libs/' }
}

dependencies {
  minecraft "net.minecraftforge:forge:$minecraft_version-$forge_version"

  jarJar(implementation(fg.deobf("com.lovetropics.lib:LTLib:1.2.0-release+9"))) {
    jarJar.ranged(it, "[1.2,1.3)")
  }

  library "com.sk89q.worldedit:worldedit-core:7.2.11-SNAPSHOT"
  implementation fg.deobf("com.sk89q.worldedit:worldedit-forge-mc1.18.2:7.2.11-SNAPSHOT")

//  implementation fg.deobf('com.github.hexomod:WorldEdit-CUI-FE3:1.16.5-3.0.9')
}

minecraft.runs.all {
  lazyToken('minecraft_classpath') {
    configurations.library.copyRecursive().resolve().collect { it.absolutePath }.join(File.pathSeparator)
  }
}

tasks.jarJar.configure {
  classifier ''
  finalizedBy('reobfJarJar')
}

reobf {
  jarJar { }
}

jar {
  classifier = 'slim'
  manifest {
    attributes([
        "Specification-Title"     : "ltperms",
        "Specification-Vendor"    : "lovetropics",
        "Specification-Version"   : "1",
        "Implementation-Title"    : project.name,
        "Implementation-Version"  : "${version}",
        "Implementation-Vendor"   : "lovetropics",
        "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ])
  }
}
